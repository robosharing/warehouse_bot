robot_1/amcl:
  ros__parameters:
    use_sim_time: true
    alpha1: 0.0001  # Увеличены для учета возможных шумов в одометрии
    alpha2: 0.0001
    alpha3: 0.0001
    alpha4: 0.0001
    alpha5: 0.0001
    base_frame_id: "robot_1_base_footprint"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 100.0
    laser_min_range: -1.0
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 2000
    min_particles: 500
    odom_frame_id: "robot_1_odom"
    pf_err: 0.02
    pf_z: 0.85
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 2
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.5
    sigma_hit: 0.02
    tf_broadcast: true
    transform_tolerance: 0.5
    update_min_a: 0.06
    update_min_d: 0.025
    z_hit: 0.7
    z_max: 0.001
    z_rand: 0.059
    z_short: 0.24
    scan_topic: "scan"
    map_topic: "/map"


        # Initial Pose
    set_initial_pose: True
    initial_pose.x: 0.0
    initial_pose.y: 0.0
    initial_pose.z: 0.0
    initial_pose.yaw: 0.0     

robot_1/amcl_map_client:
  ros__parameters:
    use_sim_time: True

robot_1/amcl_rclcpp_node:
  ros__parameters:
    use_sim_time: True





# bt_navigator:
#     ros__parameters:
#       use_sim_time: True
#       global_frame: robot_1/map
#       robot_base_frame: robot_1_base_footprint
#       odom_topic: robot_1/odom
#       bt_xml_filename: "navigate_w_recovery_and_replanning_only_if_path_becomes_invalid.xml"
#       plugin_lib_names:
#       - nav2_compute_path_to_pose_action_bt_node
#       - nav2_compute_path_through_poses_action_bt_node
#       - nav2_smooth_path_action_bt_node
#       - nav2_follow_path_action_bt_node
#       - nav2_spin_action_bt_node
#       - nav2_wait_action_bt_node
#       - nav2_assisted_teleop_action_bt_node
#       - nav2_back_up_action_bt_node
#       - nav2_drive_on_heading_bt_node
#       - nav2_clear_costmap_service_bt_node
#       - nav2_is_stuck_condition_bt_node
#       - nav2_goal_reached_condition_bt_node
#       - nav2_goal_updated_condition_bt_node
#       - nav2_globally_updated_goal_condition_bt_node
#       - nav2_is_path_valid_condition_bt_node
#       - nav2_initial_pose_received_condition_bt_node
#       - nav2_reinitialize_global_localization_service_bt_node
#       - nav2_rate_controller_bt_node
#       - nav2_distance_controller_bt_node
#       - nav2_speed_controller_bt_node
#       - nav2_truncate_path_action_bt_node
#       - nav2_truncate_path_local_action_bt_node
#       - nav2_goal_updater_node_bt_node
#       - nav2_recovery_node_bt_node
#       - nav2_pipeline_sequence_bt_node
#       - nav2_round_robin_node_bt_node
#       - nav2_transform_available_condition_bt_node
#       - nav2_time_expired_condition_bt_node
#       - nav2_path_expiring_timer_condition
#       - nav2_distance_traveled_condition_bt_node
#       - nav2_single_trigger_bt_node
#       - nav2_goal_updated_controller_bt_node
#       - nav2_is_battery_low_condition_bt_node
#       - nav2_navigate_through_poses_action_bt_node
#       - nav2_navigate_to_pose_action_bt_node
#       - nav2_remove_passed_goals_action_bt_node
#       - nav2_planner_selector_bt_node
#       - nav2_controller_selector_bt_node
#       - nav2_goal_checker_selector_bt_node
#       - nav2_controller_cancel_bt_node
#       - nav2_path_longer_on_approach_bt_node
#       - nav2_wait_cancel_bt_node
#       - nav2_spin_cancel_bt_node
#       - nav2_back_up_cancel_bt_node
#       - nav2_assisted_teleop_cancel_bt_node
#       - nav2_drive_on_heading_cancel_bt_node

#   bt_navigator_rclcpp_node:
#     ros__parameters:
#       use_sim_time: True

#   bt_navigator_navigate_through_poses_rclcpp_node:
#     ros__parameters:
#       use_sim_time: True

#   bt_navigator_navigate_to_pose_rclcpp_node:
#     ros__parameters:
#       use_sim_time: True

#   controller_server:
#     ros__parameters:
#       controller_frequency: 30.0
#       FollowPath:
#           plugin: "nav2_mppi_controller::MPPIController"
#           time_steps: 56
#           model_dt: 0.05
#           batch_size: 2000
#           vx_std: 0.2
#           vy_std: 0.2
#           wz_std: 0.4
#           vx_max: 0.5
#           vx_min: -0.55
#           vy_max: 0.5
#           wz_max: 1.9
#           iteration_count: 1
#           prune_distance: 2.5
#           transform_tolerance: 0.1
#           temperature: 0.3
#           gamma: 0.015
#           motion_model: "Ackermann"
#           visualize: true
#           reset_period: 1.0 # (only in Humble)
#           regenerate_noises: false
#           TrajectoryVisualizer:
#               trajectory_step: 5
#               time_step: 3
#           AckermannConstraints:
#               min_turning_r: 1.3
#           critics:
#               [
#                   "ConstraintCritic",
#                   "ObstaclesCritic",
#                   "GoalCritic",
#                   "GoalAngleCritic",
#                   "CostCritic",
#                   "PathAlignCritic",
#                   "PathFollowCritic",
#                   "PathAngleCritic",
#                   "PreferForwardCritic",
#               ]
#           ConstraintCritic:
#               enabled: true
#               cost_power: 1
#               cost_weight: 4.0
#           GoalCritic:
#               enabled: true
#               cost_power: 1
#               cost_weight: 5.0
#               threshold_to_consider: 1.4
#           GoalAngleCritic:
#               enabled: true
#               cost_power: 1
#               cost_weight: 3.0
#               threshold_to_consider: 0.5
#           PreferForwardCritic:
#               enabled: false
#               cost_power: 1
#               cost_weight: 5.0
#               threshold_to_consider: 0.5
#           # ObstaclesCritic:
#           #     enabled: true
#           #     cost_power: 1
#           #     repulsion_weight: 1.5
#           #     critical_weight: 20.0
#           #     consider_footprint: true
#           #     collision_cost: 10000.0
#           #     collision_margin_distance: 0.15
#           #     near_goal_distance: 0.5
#           #     inflation_radius: 0.25 # (only in Humble)
#           #     cost_scaling_factor: 10.0 # (only in Humble)
#           PathAlignCritic:
#               enabled: true
#               cost_power: 1
#               cost_weight: 14.0
#               max_path_occupancy_ratio: 0.05
#               trajectory_point_step: 3
#               threshold_to_consider: 0.5
#               offset_from_furthest: 20
#               use_path_orientations: true
#           CostCritic:
#             enabled: true
#             cost_power: 3
#             cost_weight: 3.81
#             critical_cost: 300.0
#             consider_footprint: true
#             collision_cost: 1000000.0
#             near_goal_distance: 1.0
#           PathFollowCritic:
#               enabled: true
#               cost_power: 1
#               cost_weight: 5.0
#               offset_from_furthest: 5
#               threshold_to_consider: 1.4
#           PathAngleCritic:
#               enabled: true
#               cost_power: 1
#               cost_weight: 2.0
#               offset_from_furthest: 4
#               threshold_to_consider: 0.5
#               max_angle_to_furthest: 1.0
#               forward_preference: true
#               mode: 0



#   controller_server_rclcpp_node:
#     ros__parameters:
#       use_sim_time: True

#   local_costmap:
#     local_costmap:
#       ros__parameters:
#         update_frequency: 10.0
#         publish_frequency: 5.0
#         global_frame: robot_1/odom
#         robot_base_frame: robot_1_base_footprint
#         use_sim_time: True
#         rolling_window: true
#         width: 15
#         height: 15
#         resolution: 0.05
#         robot_radius: 1.7
#         plugins: ["static_layer", "inflation_layer", "obstacle_layer"]
#         obstacle_layer:
#           plugin: "nav2_costmap_2d::ObstacleLayer"
#           enabled: True
#           observation_sources: scan
#           scan:
#             topic: robot_1/scan2
#             obstacle_max_range: 4.5
#             obstacle_min_range: 0.5
#             raytrace_max_range: 4.0
#             raytrace_min_range: 0.4
#             max_obstacle_height: 2.0
#             min_obstacle_height: 0.0
#             сlearing: True
#             marking: True
#             data_type: "LaserScan"
#         inflation_layer:
#           plugin: "nav2_costmap_2d::InflationLayer"
#           cost_scaling_factor: 3.0
#           inflation_radius: 1.1 # расстояние от препятсвия
#         static_layer:
#           plugin: "nav2_costmap_2d::StaticLayer"
#           map_subscribe_transient_local: True
#         always_send_full_costmap: True

#   global_costmap:
#     global_costmap:
#       ros__parameters:
#         update_frequency: 1.0
#         publish_frequency: 1.0
#         global_frame: robot_1/map
#         robot_base_frame: robot_1_base_footprint
#         use_sim_time: True
#         robot_radius: 1.7
#         resolution: 0.05
#         track_unknown_space: true
#         plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
#         obstacle_layer:
#           plugin: "nav2_costmap_2d::ObstacleLayer"
#           enabled: True
#           observation_sources: scan
#           scan:
#             topic: robot_1/scan2 # HERE
#             max_obstacle_height: 2.0
#             clearing: True
#             marking: True
#             data_type: "LaserScan"
#             raytrace_max_range: 3.0
#             raytrace_min_range: 0.0
#             obstacle_max_range: 2.5
#             obstacle_min_range: 0.0
#         static_layer:
#           plugin: "nav2_costmap_2d::StaticLayer"
#           map_subscribe_transient_local: True
#         inflation_layer:
#           plugin: "nav2_costmap_2d::InflationLayer"
#           cost_scaling_factor: 3.0
#           inflation_radius: 1.1 # расстояние от препятсвия
#         always_send_full_costmap: True
#   # costmap_filter_info_server:
#   #   ros__parameters:
#   #     use_sim_time: True
#   #     type: 0
#   #     filter_info_topic: "/costmap_filter_info"
#   #     mask_topic: "/keepout_filter_mask"
#   #     base: 0.0  # Значение по умолчанию
#   #     multiplier: 1.0  # Значение по умолчанию
      
#   # filter_mask_server:
#   #   ros__parameters:
#   #     use_sim_time: True
#   #     frame_id: "map"
#   #     topic_name: "/keepout_filter_mask"
#   #     yaml_filename: "mask.yaml"  # Provide the path to your filter mask yaml file

#   map_server:
#     ros__parameters:
#       use_sim_time: True
#       yaml_filename: "warehouse_map.yaml"

#   map_saver:
#     ros__parameters:
#       use_sim_time: True
#       save_map_timeout: 5.0
#       free_thresh_default: 0.25
#       occupied_thresh_default: 0.65
#       map_subscribe_transient_local: True

#   planner_server:
#     ros__parameters:
#       expected_planner_frequency: 10.0
#       use_sim_time: True
#       planner_plugins: ["GridBased"]
#       GridBased:
#         plugin: "nav2_smac_planner/SmacPlannerHybrid"
#         tolerance: 0.5 
#         downsample_costmap: true    
#         downsampling_factor: 1          
#         allow_unknown: True    
#         max_iterations: 1000000       
#         max_on_approach_iterations: 1000 
#         max_planning_time: 1.0        
#         smooth_path: true
#         motion_model_for_search: "REEDS_SHEPP"
#         angle_quantization_bins: 72 
#         minimum_turning_radius: 1.3
#         reverse_penalty: 1.0  #For Reeds-Shepp model: penalty to apply if motion is reversing, must be => 1
#         change_penalty: 0.0      
#         non_straight_penalty: 0.0     
#         cost_penalty: 5.0
#         lookup_table_size: 20.0    
#         cache_obstacle_heuristic: False
#         debug_visualizations: False
    

#   planner_server_rclcpp_node:
#     ros__parameters:
#       use_sim_time: True

#   behavior_server:
#     ros__parameters:
#       costmap_topic: local_costmap/costmap_raw
#       footprint_topic: local_costmap/published_footprint
#       cycle_frequency: 10.0
#       recovery_plugins: ["spin", "backup", "wait", "drive_on_heading"]
#       spin:
#         plugin: "nav2_recoveries/Spin"
#       backup:
#         plugin: "nav2_recoveries/BackUp"
#       wait:
#         plugin: "nav2_recoveries/Wait"
#       drive_on_heading:
#         plugin: "nav2_behaviors/DriveOnHeading"
#       global_frame: robot_1/odom
#       robot_base_frame: robot_1_base_footprint
#       transform_timeout: 0.1
#       use_sim_time: True
#       simulate_ahead_time: 2.0
#       max_rotational_vel: 1.5
#       min_rotational_vel: 0.05
#       rotational_acc_lim: 1.5

#   robot_state_publisher:
#     ros__parameters:
#       use_sim_time: True

#   smoother_server:
#     ros__parameters:
#       use_sim_time: true
#       smoother_plugins: ["simple_smoother"]
#       simple_smoother:
#         plugin: "nav2_smoother::SimpleSmoother"
#         tolerance: 1.0e-10
#         max_its: 1000
#         do_refinement: True

#   waypoint_follower:
#     ros__parameters:
#       use_sim_time: True
#       loop_rate: 20
#       stop_on_failure: false
#       waypoint_task_executor_plugin: "wait_at_waypoint"
#       wait_at_waypoint:
#         plugin: "nav2_waypoint_follower::WaitAtWaypoint"
#         enabled: True
#         waypoint_pause_duration: 200

  # velocity_smoother:
  #   ros__parameters:
  #     use_sim_time: true
  #     smoothing_frequency: 20.0
  #     scale_velocities: False
  #     feedback: "OPEN_LOOP"
  #     max_velocity: [3.5, 0.0, 1.0]  # Увеличение максимальных скоростей
  #     min_velocity: [-3.5, 0.0, -1.0]  # Увеличение минимальных скоростей
  #     max_accel: [2.0, 0.0, 2.0]  # Увеличение максимального ускорения
  #     max_decel: [-5.0, 0.0, -5.0]  # Увеличение максимального торможения
  #     odom_topic: "odom"
  #     odom_duration: 0.1
  #     deadband_velocity: [0.5, 0.5, 0.5]
  #     velocity_timeout: 1.0